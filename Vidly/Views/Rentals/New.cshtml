
@{
    ViewBag.Title = "New";
}

<h2>New Rental Form</h2>

<form id="newRental"> 
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
         </div>

    </div>

    <div class="form-group">
        <label>Movies</label>
        <div class="tt-container">
            <input id="movie" type="text" value="" class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>
   
    <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");

    <script>
        $(document).ready(function () {

            var vm = {
                movieIds : []
            };

            //step1
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'), //name is property of customerDTO
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                //remove prefetch
                remote: {
                    url: '/api/customers?query=%QUERY', // link to api controller to get all customrers
                    wildcard: '%QUERY'
                }
            });

            //step 2
            $('#customer').typeahead({
                minLength: 3, //after 3 charecters it will send request
                highlight: true 
            }, {
                name: 'customers',
                display: 'name', //property of CustomerDTO to be displayed as pick list
                source: customers // variable declared in step 1

            }).on("typeahead:select", function (e, customer) {
                //step 3: add typeahead select event to store customer id selected by user
                vm.customerId = customer.id;
                debugger;
            });


            //Add autocompletion to movies
            
            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'movies',
                display: 'name',
                source: movies
            }).on("typeahead:select", function (e, movie) {

                $('#movies').append("<li class='list-group-item'>" + movie.name + "</li>");
                $("#movie").typeahead("val", ""); // hear we can't use .val directly becuase of typeahead class

                vm.movieIds.push(movie.id); // initialize vm object with empty array, otherwise it will throw error
                
                console.log("movie " + movie.id);
            })

            //code to add custom validation: customer should be valid
            //Add this name as data-rule-validCustomer=true in input
            $.validator.addMethod("validCustomer", function () {
                return vm.customerId && vm.customerId !== 0;
            },"Please selct valid customer");

            $("#newRental").validate({
                submitHandler: function () {
                   e.preventDefault(); // to prevent html submit

                    $.ajax({
                        url: "/api/rentals",
                        method: "post",
                        data: vm
                    }).done(function (e) {
                        toastr.success("Rentals successfully recorded!")
                        console.log("done");
                    }).fail(function (e) {
                        toastr.error("Sonething unexpected happened");
                        console.log("fail");
                    })

                }
                });

        })
    </script>    
}